name: GH pages mono-env deployment
# Deploys to GH pages on:
# - PR to main branch (push to main branch should be disabled at repo level)
# - Manual workflow_dispatch to production

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

on:
  # checkov:skip=CKV_GHA_7 reason="Environment selection is safe and intentional"
  workflow_dispatch:
  push:
    branches:
      - "main"
      - "release/*"
      - "feature/*"
      - "bugfix/*"
  pull_request:
    branches:
      - "main"
      - "release/*"
      - "feature/*"
      - "bugfix/*"

env:
  working_dir_web: web

jobs:
  build:
    name: Web Lint, Test & Build
    runs-on: ubuntu-latest
    outputs:
      app_version: ${{ steps.get_version.outputs.app_version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20" # specify a version if needed

      - name: Setup pnpm
        uses: pnpm/action-setup@v4.1.0
        with:
          version: latest
          run_install: true

      - name: Run Vitest tests

        run: |
          cd ${{ env.working_dir_web }}
          pnpm test
        env:
          CI: true

      - name: Get App version
        id: get_version
        run: |
          cd ${{ env.working_dir_web }}
          APP_VERSION=$(node -p "require('./package.json').version")
          echo "app_version=$APP_VERSION" >> $GITHUB_OUTPUT
          echo "App Version: $APP_VERSION"

      - name: Build project
        run: |
          cd ${{ env.working_dir_web }}
          npm run build:prod

      - name: Upload production-ready build files
        id: deployment
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.working_dir_web }}/dist

  deploy:
    name: Deploy
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  slack:
    name: Slack
    needs: deploy
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: technote-space/workflow-conclusion-action@v3

      - uses: 8398a7/action-slack@v3
        # Prevents posting useless messages for skipped or cancelled workflows.
        if: env.WORKFLOW_CONCLUSION != 'skipped' && env.WORKFLOW_CONCLUSION != 'cancelled'

        with:
          status: custom
          fields: workflow,job,commit,repo,ref,author,took
          custom_payload: |
            {
              attachments: [{
                color: '${{ env.WORKFLOW_CONCLUSION }}' === 'success' ? 'good' : '${{ env.WORKFLOW_CONCLUSION }}' === 'failure' ? 'danger' : 'warning',
                text: `${process.env.AS_WORKFLOW}\n${process.env.AS_JOB} (${process.env.AS_COMMIT}) of ${process.env.AS_REPO}@${process.env.AS_REF} by ${process.env.AS_AUTHOR} ${{ env.WORKFLOW_CONCLUSION }} in ${process.env.AS_TOOK}`,
              }]
            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
