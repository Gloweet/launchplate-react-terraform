/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about/route'
import { Route as IndexImport } from './routes/index'
import { Route as AboutIndexImport } from './routes/about/index'
import { Route as AboutVisionImport } from './routes/about/vision'
import { Route as AboutTeamImport } from './routes/about/team'
import { Route as AboutProjectsImport } from './routes/about/projects'

// Create/Update Routes

const AboutRouteRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AboutIndexRoute = AboutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AboutRouteRoute,
} as any)

const AboutVisionRoute = AboutVisionImport.update({
  id: '/vision',
  path: '/vision',
  getParentRoute: () => AboutRouteRoute,
} as any)

const AboutTeamRoute = AboutTeamImport.update({
  id: '/team',
  path: '/team',
  getParentRoute: () => AboutRouteRoute,
} as any)

const AboutProjectsRoute = AboutProjectsImport.update({
  id: '/projects',
  path: '/projects',
  getParentRoute: () => AboutRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRoute
    }
    '/about/projects': {
      id: '/about/projects'
      path: '/projects'
      fullPath: '/about/projects'
      preLoaderRoute: typeof AboutProjectsImport
      parentRoute: typeof AboutRouteImport
    }
    '/about/team': {
      id: '/about/team'
      path: '/team'
      fullPath: '/about/team'
      preLoaderRoute: typeof AboutTeamImport
      parentRoute: typeof AboutRouteImport
    }
    '/about/vision': {
      id: '/about/vision'
      path: '/vision'
      fullPath: '/about/vision'
      preLoaderRoute: typeof AboutVisionImport
      parentRoute: typeof AboutRouteImport
    }
    '/about/': {
      id: '/about/'
      path: '/'
      fullPath: '/about/'
      preLoaderRoute: typeof AboutIndexImport
      parentRoute: typeof AboutRouteImport
    }
  }
}

// Create and export the route tree

interface AboutRouteRouteChildren {
  AboutProjectsRoute: typeof AboutProjectsRoute
  AboutTeamRoute: typeof AboutTeamRoute
  AboutVisionRoute: typeof AboutVisionRoute
  AboutIndexRoute: typeof AboutIndexRoute
}

const AboutRouteRouteChildren: AboutRouteRouteChildren = {
  AboutProjectsRoute: AboutProjectsRoute,
  AboutTeamRoute: AboutTeamRoute,
  AboutVisionRoute: AboutVisionRoute,
  AboutIndexRoute: AboutIndexRoute,
}

const AboutRouteRouteWithChildren = AboutRouteRoute._addFileChildren(
  AboutRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRouteRouteWithChildren
  '/about/projects': typeof AboutProjectsRoute
  '/about/team': typeof AboutTeamRoute
  '/about/vision': typeof AboutVisionRoute
  '/about/': typeof AboutIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about/projects': typeof AboutProjectsRoute
  '/about/team': typeof AboutTeamRoute
  '/about/vision': typeof AboutVisionRoute
  '/about': typeof AboutIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRouteRouteWithChildren
  '/about/projects': typeof AboutProjectsRoute
  '/about/team': typeof AboutTeamRoute
  '/about/vision': typeof AboutVisionRoute
  '/about/': typeof AboutIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/about/projects'
    | '/about/team'
    | '/about/vision'
    | '/about/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about/projects' | '/about/team' | '/about/vision' | '/about'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/about/projects'
    | '/about/team'
    | '/about/vision'
    | '/about/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRouteRoute: typeof AboutRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRouteRoute: AboutRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about/route.tsx",
      "children": [
        "/about/projects",
        "/about/team",
        "/about/vision",
        "/about/"
      ]
    },
    "/about/projects": {
      "filePath": "about/projects.tsx",
      "parent": "/about"
    },
    "/about/team": {
      "filePath": "about/team.tsx",
      "parent": "/about"
    },
    "/about/vision": {
      "filePath": "about/vision.tsx",
      "parent": "/about"
    },
    "/about/": {
      "filePath": "about/index.tsx",
      "parent": "/about"
    }
  }
}
ROUTE_MANIFEST_END */
